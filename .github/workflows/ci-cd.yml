# Trigger the workflow on push to any branch or on pull request into master
name: vmware-cloud-director-ui-components
on:
    push:
    pull_request:
        branches: [master, a11y]
        types: [opened, reopened, synchronize]

jobs:
    npm-ci:
        name: Install and cache node_modules
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            - name: Create npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - run: npm ci --ignore-scripts;

    lint-projects:
        runs-on: ubuntu-latest
        name: Linting
        needs: [npm-ci]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}
            - run: |
                  npm run lint i18n
                  npm run lint components
                  npm run lint examples
                  npm run lint route-analyzer

    build-i18n:
        runs-on: ubuntu-latest
        name: Build /i18n
        needs: [npm-ci]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Store i18n output
              uses: actions/cache@v1
              with:
                  path: ./dist/i18n
                  key: ${{github.sha}}-i18n
            - run: |
                  npm run build:i18n

    build-components:
        runs-on: ubuntu-latest
        name: Build /components
        needs: [build-i18n, npm-ci]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Read i18n cache
              uses: actions/cache@v1
              with:
                  path: ./dist/i18n
                  key: ${{github.sha}}-i18n

            - name: Store components cache
              uses: actions/cache@v1
              with:
                  path: ./dist/components
                  key: ${{ github.sha }}-components
            - run: npm run build:components

    build-ng-live-docs:
        runs-on: ubuntu-latest
        name: Build /ng-live-docs
        needs: [npm-ci]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Store ng-live-docs output
              uses: actions/cache@v1
              with:
                  path: ./dist/ng-live-docs
                  key: ${{github.sha}}-ng-live-docs

            - name: build
              run: npm run build:ng-live-docs

    build-app:
        runs-on: ubuntu-latest
        name: Build /examples-app
        needs: [npm-ci, build-i18n, build-components, build-ng-live-docs]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Read ng-live-docs cache
              uses: actions/cache@v1
              with:
                  path: ./dist/ng-live-docs
                  key: ${{github.sha}}-ng-live-docs

            - name: Read components cache
              uses: actions/cache@v1
              with:
                  path: ./dist/components
                  key: ${{ github.sha }}-components

            - name: Read i18n cache
              uses: actions/cache@v1
              with:
                  path: ./dist/i18n
                  key: ${{github.sha}}-i18n

            - name: Store examples app output
              uses: actions/cache@v1
              with:
                  path: ./dist/examples
                  key: ${{github.sha}}-examples

            - run: |
                  npx nx build examples --configuration=production --base-href=/vmware-cloud-director-ui-components/

    build-route-analyzer:
        runs-on: ubuntu-latest
        name: Build /route-analyzer
        needs: [npm-ci]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Store route-analyzer output
              uses: actions/cache@v1
              with:
                  path: ./dist/route-analyzer
                  key: ${{github.sha}}-route-analyzer
            - run: npm run build:route-analyzer

    unit-testing:
        runs-on: ubuntu-latest
        name: Unit tests
        needs: [npm-ci, build-i18n]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Read i18n cache
              uses: actions/cache@v1
              with:
                  path: ./dist/i18n
                  key: ${{github.sha}}-i18n

            - name: Read route analyzer cache
              uses: actions/cache@v1
              with:
                  path: ./dist/route-analyzer
                  key: ${{github.sha}}-route-analyzer

            - name: Run unit-tests
              run: |
                  npm run test:ci:components
                  npm run test:ci:i18n
                  npm run test:route-analyzer
                  npm run test:ci:ng-live-docs

            - name: Upload coverage to Codecov
              if: success()
              uses: codecov/codecov-action@v1

    gh-pages-deploy:
        runs-on: ubuntu-latest
        name: Deploying to Github pages
        needs: [npm-ci, build-app, unit-testing]
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Read examples app cache
              uses: actions/cache@v1
              with:
                  path: ./dist/examples
                  key: ${{github.sha}}-examples

            - run: |
                  npx ng deploy --no-build
              if: github.event_name == 'push' && github.ref == 'refs/heads/master'
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}

    publish-components:
        if: contains(github.event.head_commit.message, '[publish @vcd/ui-components')
            && github.event_name == 'push'
            && github.ref == 'refs/heads/master'
        needs: [build-components, unit-testing]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            # Default registry is github's internal npm registry
            - name: Setup Node registry
              uses: actions/setup-node@v1
              with:
                  node-version: '13'
                  registry-url: https://registry.npmjs.org/

            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Read components cache
              uses: actions/cache@v1
              with:
                  path: ./dist/components
                  key: ${{github.sha}}-components

            - name: Check if package.json changed
              id: check-version
              uses: EndBug/version-check@v2
              with:
                  diff-search: true
                  file-name: ./projects/components/package.json

            - name: Publish components@next
              if: contains(github.event.head_commit.message, '[publish @vcd/ui-components]')
              run: |
                  cd ./dist/components
                  npm publish --tag next --access public
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

            - name: Publish components@latest
              if: contains(github.event.head_commit.message, '[publish @vcd/ui-components@latest]')
              run: |
                  cd ./dist/components
                  npm publish
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

    publish-i18n:
        if: contains(github.event.head_commit.message, '[publish @vcd/i18n')
            && github.event_name == 'push'
            && github.ref == 'refs/heads/master'
        needs: [build-i18n, unit-testing]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            # Default registry is github's internal npm registry
            - name: Setup Node registry
              uses: actions/setup-node@v1
              with:
                  node-version: '13'
                  registry-url: https://registry.npmjs.org/

            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Read i18n cache
              uses: actions/cache@v1
              with:
                  path: ./dist/i18n
                  key: ${{github.sha}}-i18n

            - name: Check if package.json changed
              id: check-version
              uses: EndBug/version-check@v2
              with:
                  diff-search: true
                  file-name: ./projects/i18n/package.json

            - name: Publish i18n@next
              if: contains(github.event.head_commit.message, '[publish @vcd/i18n]')
              run: |
                  cd ./dist/i18n
                  npm publish --tag next --access public
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

            - name: Publish i18n@latest
              if: contains(github.event.head_commit.message, '[publish @vcd/i18n@latest]')
              run: |
                  cd ./dist/i18n
                  npm publish
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

    publish-route-analyzer:
        if: contains(github.event.head_commit.message, '[publish @vcd/route-analyzer')
            && github.event_name == 'push'
            && github.ref == 'refs/heads/master'
        needs: [build-route-analyzer, unit-testing]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            # Default registry is github's internal npm registry
            - name: Setup Node registry
              uses: actions/setup-node@v1
              with:
                  node-version: '13'
                  registry-url: https://registry.npmjs.org/

            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Read route-analyzer cache
              uses: actions/cache@v1
              with:
                  path: ./dist/route-analyzer
                  key: ${{github.sha}}-route-analyzer

            - name: Check if package.json changed
              id: check-version
              uses: EndBug/version-check@v2
              with:
                  diff-search: true
                  file-name: ./projects/route-analyzer/package.json

            - name: Publish route-analyzer@next
              if: contains(github.event.head_commit.message, '[publish @vcd/route-analyzer]')
              run: |
                  cd ./dist/route-analyzer
                  npm publish --tag next --access public
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

            - name: Publish route-analyzer@latest
              if: contains(github.event.head_commit.message, '[publish @vcd/route-analyzer@latest]')
              run: |
                  cd ./dist/route-analyzer
                  npm publish
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

    publish-ng-live-docs:
        if: contains(github.event.head_commit.message, '[publish @vmw/ng-live-docs')
            && github.event_name == 'push'
            && github.ref == 'refs/heads/master'
        needs: [build-ng-live-docs, unit-testing]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v3
              with:
                node-version: 16.10.0
            # Default registry is github's internal npm registry
            - name: Setup Node registry
              uses: actions/setup-node@v1
              with:
                  node-version: '13'
                  registry-url: https://registry.npmjs.org/

            - name: Read npm_modules cache
              uses: actions/cache@v1
              with:
                  path: ./node_modules
                  key: npm-${{ github.sha }}

            - name: Read ng-live-docs cache
              uses: actions/cache@v1
              with:
                  path: ./dist/ng-live-docs
                  key: ${{github.sha}}-ng-live-docs

            - name: Publish ng-live-docs@next
              if: contains(github.event.head_commit.message, '[publish @vmw/ng-live-docs]')
              run: |
                  cd ./dist/ng-live-docs
                  npm publish --tag next --access public
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

            - name: Publish ng-live-docs@latest
              if: contains(github.event.head_commit.message, '[publish @vmw/ng-live-docs@latest]')
              run: |
                  cd ./dist/ng-live-docs
                  npm publish
              env:
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
